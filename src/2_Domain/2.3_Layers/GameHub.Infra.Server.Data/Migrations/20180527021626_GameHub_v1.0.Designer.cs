// <auto-generated />
using GameHub.Infra.Server.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace GameHub.Infra.Server.Data.Migrations
{
    [DbContext(typeof(GameHub_Context))]
    [Migration("20180527021626_GameHub_v1.0")]
    partial class GameHub_v10
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GameHub.Domain.Core.Models.Console", b =>
                {
                    b.Property<Guid>("ConsoleId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("ConsoleId");

                    b.ToTable("Consoles");
                });

            modelBuilder.Entity("GameHub.Domain.Core.Models.Friend", b =>
                {
                    b.Property<Guid>("FriendId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("ImagePath");

                    b.Property<string>("Name");

                    b.HasKey("FriendId");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("GameHub.Domain.Core.Models.Game", b =>
                {
                    b.Property<Guid>("GameId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DevolutionPrevision");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(700);

                    b.Property<bool>("IsBorrowed");

                    b.Property<bool>("IsFavorite");

                    b.Property<DateTime>("LastLoan");

                    b.Property<DateTime>("LoanDate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("GameId");

                    b.ToTable("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
